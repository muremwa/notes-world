{"version":3,"sources":["dispatcher.js","sections/CommentFormArea.js","actions/CommentActions.js","logic/CommentParse.js","sections/Comment.js","stores/CommentStore.js","Layout.js","App.js","serviceWorker.js","index.js"],"names":["dispatcher","Dispatcher","CommentForm","e","preventDefault","window","f","target","children","commentText","comment","value","style","display","$","ajax","type","url","noteCommentsApi","crossDomain","data","csrfmiddlewaretoken","token","success","response","dispatch","payload","document","getElementById","error","err","hiddenFeature","react_default","a","createElement","method","encType","onSubmit","this","submitComment","bind","className","name","cols","rows","maxLength","required","id","placeholder","data-dismiss","aria-hidden","Component","paintComment","paint","link","concat","userSearchUrl","split","join","UserImage","props","src","profile","alt","user","ActionButton","buttonType","action","onClick","clickHandler","data-id","data-url","actionUrl","CommentEditForm","newComment","commentDiv","parentElement","preEdit","innerHTML","errorDiv","headers","X-HTTP-Method-Override","original_comment","error_message","statusText","editComment","editable","defaultValue","width","handleAbort","BottomAction","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","actions","edit","replyUrl","attributes","location","href","length","commentId","innerText","commentDeleteUrl","classList","add","console","log","status","deleteComment","_this2","_this$props","actionButtons","filter","map","i","assign","key","ownsNote","deleteButton","splice","Comment_CommentEditForm","Edited","edited","CommentBody","_this$props2","time","replies","cleanComment","users","match","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","return","parseComment","dangerouslySetInnerHTML","__html","Comment_BottomAction","Comment","imageUrl","Comment_CommentBody","commentStore","CommentStore","note","comments","commentsExist","rawComment","uuid","username","full_name","comment_id","text","reply_url","action_url","synthesisComment","title","ownerId","owner_id","userName","fullName","profileUrl","emit","unshift","find","new_key","index","findIndex","fetchComments","createComment","EventEmitter","register","handleActions","LoadingComments","NoCommentsAvalible","noteTitle","CommentSite","noComments","Layout","getComments","assertThisInitialized","getNote","getUser","on","removeListener","setState","sections_Comment","commentType","hasCommentMessage","CommentFormArea","App","src_Layout","Boolean","hostname","commentZone","dataset","commentsUrl","searchUserUrl","toConsumableArray","getElementsByName","node","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99d48eee.chunk.js","sourcesContent":["import { Dispatcher } from 'flux';\r\nexport default new Dispatcher();","import React, {Component} from 'react';\r\nimport { createComment } from '../actions/CommentActions';\r\n\r\nclass CommentForm extends Component {\r\n    /* \r\n    Top comment creating form\r\n    */\r\n    submitComment (e) {\r\n        e.preventDefault();\r\n        window.f = e.target.children;\r\n        const comment = e.target.children[0].children[1].value;\r\n        e.target.children[2].style.display = '';\r\n        createComment(comment);\r\n    };\r\n\r\n    render () {\r\n        const hiddenFeature = {display: 'none'};\r\n\r\n        return (\r\n            <form method=\"post\" encType=\"multipart/form-data\" onSubmit={this.submitComment.bind(this)}>\r\n                <div className=\"form-group\" name='comment-textarea-group'>\r\n                    <label>Comment:</label>\r\n                    <textarea name='comment-textarea' className=\"form-control\" cols=\"40\" rows=\"10\" maxLength=\"140\" required id=\"id_comment\" placeholder=\"add comment here (use '@username' to mention someone)\"></textarea>\r\n                </div>\r\n                <hr />\r\n                <div className=\"alert alert-info\" id=\"comment-alert-info\" name='comment-info' style={hiddenFeature}>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>\r\n                    Posting your comment...\r\n                </div>\r\n                <div className=\"alert alert-warning\" id=\"comment-alert-error\" style={hiddenFeature}>\r\n                    Could not post your comment. Refresh the page and try again\r\n                </div>\r\n                <button type='submit' className='col-sm-4 form-control'>Comment</button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nexport default CommentForm;\r\n","import dispatcher from '../dispatcher';\r\nimport $ from 'jquery';\r\nimport { noteCommentsApi, token } from '../index';\r\n\r\n\r\n export function fetchComments () {\r\n     /* \r\n     fetch comments on load      \r\n     */\r\n    $.ajax({\r\n        type: \"GET\",\r\n        url: noteCommentsApi,\r\n        crossDomain: true,\r\n        success: function (response) {\r\n            dispatcher.dispatch({\r\n                type: 'COMMENTS',\r\n                payload: response\r\n            })\r\n        },\r\n        error: function (err) {\r\n            //\r\n        }\r\n    });\r\n}\r\n\r\nexport function deleteComment(commentDeleteUrl, commentId, target) {\r\n    /* \r\n     delete a comment      \r\n     */\r\n    $.ajax({\r\n        headers: {\r\n            'X-HTTP-Method-Override': 'DELETE'\r\n        },\r\n        type: \"POST\",\r\n        url: commentDeleteUrl,\r\n        crossDomain: true,\r\n        data: {\r\n            csrfmiddlewaretoken: token\r\n        },\r\n        success: function (response) {\r\n            if (response.success === true){\r\n                dispatcher.dispatch({\r\n                    type: 'DELETE_COMMENT',\r\n                    comment: commentId,\r\n                })\r\n            } else {\r\n                target.classList.add('disabled');\r\n                target.innerText = 'Could not delete comment';\r\n            }\r\n        },\r\n        error: function (err) {\r\n            console.log('could not delete the comment', err.statusText, err.status);\r\n            target.classList.add('disabled');\r\n            target.innerText = 'Could not delete comment';            \r\n        }\r\n    })\r\n}\r\n\r\nexport function editComment (newComment, url, errorDiv) {\r\n    /* \r\n     edit a comment    \r\n     */\r\n    $.ajax({\r\n        headers: {\r\n            'X-HTTP-Method-Override': 'PATCH'\r\n        },\r\n        type: 'POST',\r\n        url: url,\r\n        crossDomain: true,\r\n        data: {\r\n            original_comment: newComment,\r\n            csrfmiddlewaretoken: token\r\n        },\r\n        success: function (response) {\r\n            if (response.success === true) {\r\n                dispatcher.dispatch ({\r\n                    type: 'COMMENT_EDIT',\r\n                    payload: response\r\n                });\r\n            } else {\r\n                errorDiv.innerHTML = `<div class=\"alert alert-warning\"> \\\r\n                                        <strong>Error!</strong> Could not edit your comment: ${response.error_message}. Refresh the page and try again... \\\r\n                                    </div>`\r\n            }\r\n        },\r\n        error: function (err) {\r\n            errorDiv.innerHTML = `<div class=\"alert alert-warning\"> \\\r\n                                        <strong>Error!</strong> Could not edit your comment: ${err.statusText}. Refresh the page and try again... \\\r\n                                    </div>`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport function createComment (commentText) {\r\n    /*\r\n    Create a new comment\r\n    */\r\n   $.ajax({\r\n       type: 'POST',\r\n       url: noteCommentsApi,\r\n       crossDomain: true,\r\n       data: {\r\n           comment: commentText,\r\n           csrfmiddlewaretoken: token\r\n       },\r\n       success: function (response) { \r\n            dispatcher.dispatch({\r\n                type: 'COMMENT_CREATED',\r\n                payload: response.comment,\r\n            })\r\n            document.getElementById('comment-alert-info').style.display = 'none';\r\n            document.getElementById('comment-alert-error').style.display = 'none';\r\n            document.getElementById('id_comment').value = '';\r\n       },\r\n       error: function (err) {\r\n           document.getElementById('comment-alert-info').style.display = 'none';\r\n           document.getElementById('comment-alert-error').style.display = '';\r\n       }\r\n   })\r\n}\r\n","/* \r\nReceive a comment and check whether it has a username in it the add link for it\r\nEg. 'This comment has a refrence to @jimmy from squarespace'\r\n\r\nparse() => \r\n\r\n'This comment has a reference to <a href='/api/get/user/?username=jimmy'>@jimmy</a> from squarespace\r\n\r\n*/\r\nimport { userSearchUrl } from '../index';\r\n\r\nfunction paintComment (comment, paint) {\r\n    /*\r\n    Given a text and a word in it, split the text the join with a link in it\r\n    'why would @kim do that to @bill, why?', ;@kim' => \r\n    'why would <a href='/api/get/user/?username=kim'>@kim</a> do that to @bill, why?'\r\n    */\r\n    const link = `<a href='${userSearchUrl}?username=${paint.split('@')[1]}'>${paint}</a>`;\r\n    return comment.split(paint).join(link)\r\n}\r\n\r\nexport default function parseComment (comment) {\r\n    const pattern = /@\\w+/g\r\n\r\n    let users = comment.match(pattern);\r\n    let newComment = comment;\r\n\r\n    if (users !== null) {\r\n        for (let user of users) {\r\n            newComment = paintComment(newComment, user);\r\n        };\r\n    }\r\n\r\n    return newComment;\r\n};","import React,{ Component } from \"react\";\r\nimport { deleteComment, editComment } from '../actions/CommentActions';\r\nimport parseComment from '../logic/CommentParse';\r\n\r\nfunction UserImage(props) {\r\n    /* \r\n    user's image on the comment section\r\n    */\r\n    return (\r\n        <div className=\"col-sm-1 user-img\">                \r\n            <img src={props.profile} alt={\"profile picture for \"+props.user} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction ActionButton (props) {\r\n    /* \r\n    buttons under the comment\r\n    */\r\n    const buttonType = props.action === 'delete comment'? 'danger': 'dark';\r\n    return <button onClick={props.clickHandler} className={\"btn btn-link text-\"+buttonType} data-id={props.id} data-url={props.actionUrl}>{props.action}</button>\r\n}\r\n\r\n\r\nclass CommentEditForm extends Component {    \r\n    /* \r\n    Form that appears under a comment section to enable one to edit the comment\r\n    */\r\n    editComment (e) {\r\n        e.preventDefault();\r\n        const url = this.props.actionUrl;\r\n        const newComment = e.target.children[0].children[0].value;\r\n        const commentDiv = e.target.parentElement.parentElement.children[1];\r\n        const preEdit = commentDiv.innerHTML;\r\n        commentDiv.innerHTML = '<h2>Editing comment...</h2>'\r\n\r\n        // only send a changed comment to the backend\r\n        if (newComment !== this.props.comment) {\r\n            editComment(newComment, url, e.target);\r\n        } else {\r\n            e.target.style.display = 'none';\r\n            commentDiv.innerHTML = preEdit;\r\n        };\r\n    };\r\n    \r\n    handleAbort (e) {\r\n        // when abort button is clicked close the edit comment form\r\n        e.target.parentElement.style.display = 'none';  \r\n    };\r\n    \r\n    render () {\r\n        // if a user cannot edit a comment, this form will not appear\r\n        if (!this.props.editable) {\r\n            return null;\r\n        };\r\n\r\n        const formStyle = {\r\n            display: 'none'\r\n        }\r\n\r\n        return (\r\n            <form className=\"form-inline\" style={formStyle} name='edit-comment-form' onSubmit={this.editComment.bind(this)}>\r\n                <div className=\"form-group col-sm-7\" name='edit-control'>\r\n                    <textarea className=\"form-control\" name='edit-comment' required defaultValue={this.props.comment}></textarea>\r\n                </div>\r\n                <div style={{width: '30%'}} className=\"form-group col-sm-2\">\r\n                    <input type=\"submit\" className=\"btn form-control\" value=\"edit\" />\r\n                </div>\r\n                <span onClick={this.handleAbort} className=\"btn text-danger close-edit\">abort</span>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass BottomAction extends Component {\r\n    /* \r\n    The bottom section of a comment\r\n    */\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            actions: [\r\n                {\r\n                    action: 'reply',\r\n                    actionUrl: '/reply/',\r\n                    edit: true,\r\n                    clickHandler: function (e) {\r\n                        // handle the reply button click\r\n                        const replyUrl = e.target.attributes['data-url'].value;\r\n                        window.location.href = replyUrl;\r\n                    }\r\n                },\r\n                {\r\n                    action: 'edit comment',\r\n                    actionUrl: '/edit/',\r\n                    edit: true,\r\n                    clickHandler: function (e) {\r\n                        // handle editting a comment\r\n                        const editForm = e.target.parentElement.children[e.target.parentElement.children.length - 2];\r\n                        editForm.style.display = '';\r\n                    }\r\n                },\r\n                {\r\n                    action: 'delete comment',\r\n                    actionUrl: '/delete/',\r\n                    edit: true,\r\n                    clickHandler: function (e) {\r\n                        // handle deletion of a comment\r\n                        const url = e.target.attributes['data-url'].value;\r\n                        const commentId = e.target.attributes['data-id'].value;\r\n                        e.target.innerText = 'Deleting comment';\r\n                        deleteComment(url, commentId, e.target);\r\n                    }\r\n                },\r\n                {\r\n                    action: 'flag',\r\n                    actionUrl: '/flag/',\r\n                    edit: false,\r\n                    clickHandler: function (e) {\r\n                        console.log('flag coming soon');\r\n                    }\r\n                },\r\n            ]\r\n        }\r\n    };\r\n\r\n    render () {\r\n        const {replyUrl, actionUrl, id, comment} = this.props;\r\n\r\n        const actionButtons = this.state.actions.filter(\r\n            (action) => action.edit === this.props.editable || action.action === 'reply'\r\n        ).map(function (action, i) {\r\n            // use appropriate urls mappings\r\n            if (action.action === 'reply') {\r\n                action.actionUrl = replyUrl;\r\n            } else if (action.action === 'delete comment') {\r\n                action.actionUrl = actionUrl;\r\n            };\r\n            return <ActionButton key={i} id={id} {...action} />;\r\n        });\r\n\r\n        // if the user owns this note they can delete the comment\r\n        if (this.props.ownsNote) {\r\n            if (actionButtons.length === 2) {\r\n                const deleteButton = <ActionButton key={2} id={id} {...this.state.actions[2]} actionUrl={actionUrl} />;\r\n                actionButtons.splice(1, 0, deleteButton);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"action-buttons\">\r\n                {actionButtons}\r\n                <CommentEditForm comment={comment} actionUrl={actionUrl} editable={this.props.editable}/>\r\n                <hr />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction Edited (props) {\r\n    if (!props.edited) {\r\n        return null;\r\n    }\r\n    return <span className=\"text-info\">edited</span>;\r\n}\r\n\r\nclass CommentBody extends Component {\r\n    render () {\r\n        const {name, user, time, edited, replies, comment} = this.props;\r\n        const cleanComment = parseComment(comment);\r\n\r\n        return (\r\n            <div className=\"col-sm-11\">\r\n                <span className=\"comment-info\">\r\n                    <strong>{name} </strong> \r\n                    <small className=\"text-danger\">@{user} </small> \r\n                    posted <strong className=\"dated\">{time} </strong>\r\n                    <Edited edited={edited} />\r\n                    <span className=\"text-info\"> {replies} replies</span>\r\n                </span>\r\n                <div className=\"comment-text\" name='comment-text'>\r\n                    <p dangerouslySetInnerHTML={{__html: cleanComment}}></p>\r\n                </div>\r\n                <BottomAction id={this.props.commentId} ownsNote={this.props.ownsNote} comment={comment} editable={this.props.editable} replyUrl={this.props.replyUrl} actionUrl={this.props.actionUrl}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Comment extends Component {\r\n    /* \r\n    The whole comment container\r\n    */\r\n    render () {\r\n        return (\r\n            <div className=\"row text-primary comment\" id={\"comment\"+this.props.commentId}>\r\n                <UserImage user={this.props.user} profile={this.props.imageUrl}/>\r\n                <CommentBody {...this.props}/>\r\n                <hr />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Comment;","import { EventEmitter } from 'events';\r\n\r\nimport dispatcher from '../dispatcher';\r\n\r\n\r\nclass CommentStore extends EventEmitter {\r\n    constructor () {\r\n        super();\r\n        this.user = {};\r\n        this.note = {};\r\n        this.comments = [];\r\n        this.commentsExist = true;\r\n    }\r\n\r\n    getComments () {\r\n        return this.comments;\r\n    }\r\n\r\n    getNote () {\r\n        return this.note;\r\n    }\r\n\r\n    getUser () {\r\n        return this.user;\r\n    }\r\n\r\n    synthesisComment (rawComment) {\r\n        return {\r\n            uuid: rawComment.key,\r\n            user: rawComment.username,\r\n            name: rawComment.full_name,\r\n            imageUrl: rawComment.profile,\r\n            commentId: rawComment.comment_id,\r\n            comment: rawComment.text,\r\n            time: rawComment.time,\r\n            replies: rawComment.replies,\r\n            replyUrl: rawComment.reply_url,\r\n            actionUrl: rawComment.action_url,\r\n            edited: rawComment.edited,\r\n            editable: rawComment.editable\r\n        }\r\n    }\r\n\r\n    fetchComments (payload) {\r\n        this.comments = payload.comments.map((comment) => this.synthesisComment(comment));\r\n\r\n        if (this.comments.length === 0) {\r\n            this.commentsExist = false;\r\n        };\r\n\r\n        this.note = {\r\n            'title': payload.note,\r\n            'ownerId': payload.owner_id,\r\n            'comments': payload.comments.length\r\n        };\r\n        this.user = {\r\n            id: payload.user.id,\r\n            userName: payload.user.username,\r\n            fullName: payload.user.full_name,\r\n            profileUrl: payload.user.profile,\r\n        };\r\n        this.emit('change');\r\n    }\r\n\r\n    createComment (newComment) {\r\n        const cleanComment = this.synthesisComment(newComment);\r\n        this.comments.unshift(cleanComment);\r\n        this.commentsExist = true;\r\n        this.note.comments++;\r\n        this.emit('change');\r\n    }\r\n\r\n    editComment (newComment) {\r\n        const comment = this.comments.find(comment => comment.commentId === newComment.comment_id);\r\n        comment.edited = true;\r\n        comment.replies = newComment.replies;\r\n        comment.comment = newComment.comment;\r\n        comment.uuid = newComment.new_key;\r\n        this.emit('change');\r\n    }\r\n\r\n    deleteComment(commentId) {\r\n        // delete a comment from this.comments\r\n        const index = this.comments.findIndex(comment => comment.commentId === +commentId);\r\n        this.comments.splice(index, 1);\r\n        this.note.comments--;\r\n        this.commentsExist = this.note.comments === 0? false: true;\r\n        this.emit('change');\r\n    }\r\n\r\n    handleActions (action) {\r\n        switch (action.type) {\r\n            case 'COMMENTS':\r\n                this.fetchComments(action.payload);\r\n                break;\r\n            \r\n            case 'DELETE_COMMENT':\r\n                this.deleteComment(action.comment);\r\n                break;\r\n\r\n            case 'COMMENT_EDIT':\r\n                this.editComment(action.payload)\r\n                break;\r\n\r\n            case 'COMMENT_CREATED':\r\n                this.createComment(action.payload);\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nconst commentStore = new CommentStore();\r\ndispatcher.register(commentStore.handleActions.bind(commentStore))\r\nexport default commentStore;\r\n","import React, { Component } from 'react';\r\nimport CommentForm from './sections/CommentFormArea';\r\nimport Comment from './sections/Comment';\r\nimport * as CommentActions  from './actions/CommentActions';\r\n\r\nimport CommentStore from './stores/CommentStore';\r\n\r\n\r\nfunction LoadingComments () {\r\n\t/* \r\n    Show comments are loading\r\n    */\r\n\treturn <h2>Loading comments...</h2>\r\n}\r\n\r\nfunction NoCommentsAvalible (props) {\r\n\t/* \r\n    No comments on this post\r\n    */\r\n\treturn (\r\n\t\t<div id=\"no-comments\">\r\n            <h3 className=\"alert-heading text-center\">no comments yet to { props.noteTitle }</h3>\r\n        </div>\r\n\t);\r\n}\r\n\r\nfunction CommentSite (props) {\r\n\t/* \r\n    Decide whether to show comments are loading or that no comments are available\r\n    */\r\n\tif (!props.noComments) {\r\n\t\treturn <NoCommentsAvalible noteTitle={props.noteTitle} />\r\n\t} else {\r\n\t\tif (props.comments.length === 0) {\r\n\t\t\treturn <LoadingComments />\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{props.comments}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass Layout extends Component {\r\n\tconstructor () {\r\n\t\tsuper();\r\n    \tthis.getComments = this.getComments.bind(this);\r\n    \tthis.state = {\r\n\t\t\tnote: CommentStore.getNote(),\r\n\t\t\tuser: CommentStore.getUser(),\r\n\t\t\tcomments: CommentStore.getComments(),\r\n\t\t\tcommentsExist: CommentStore.commentsExist\r\n    \t}\r\n\t}\r\n\r\n\r\n  \tcomponentWillMount() {\r\n    \tCommentActions.fetchComments();\r\n\t\tCommentStore.on('change', this.getComments);\r\n\t}\r\n\t  \r\n\tcomponentWillUnmount () {\r\n\t\tCommentStore.removeListener('change', this.getComments)\r\n\t}\r\n\t\r\n\r\n\tgetComments () {\r\n\t\tthis.setState({\r\n\t\t\tcomments: CommentStore.getComments(),\r\n\t\t\tnote: CommentStore.getNote(),\r\n\t\t\tuser: CommentStore.getUser(),\r\n\t\t\tcommentsExist: CommentStore.commentsExist,\r\n\t\t})\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst ownsNote = this.state.note.ownerId === this.state.user.id? true: false;\r\n\t\tlet comments = this.state.comments.map((comment) => <Comment key={comment.uuid} {...comment} ownsNote={ownsNote}/>)\r\n\t\tconst commentType = this.state.note.comments === 1? 'comment': 'comments';\r\n\t\tconst hasCommentMessage = this.state.note.comments === 0? 'no comments': `${this.state.note.comments} ${commentType}`;\r\n\r\n\t\treturn (\r\n\t\t\t<div id=\"comments-section\">\r\n\t\t\t\t<h3>comments <small className=\"text-warning\">{this.state.note.title} has {hasCommentMessage}</small></h3>\r\n\t\t\t\t<CommentForm />\r\n\t\t\t\t<hr />\r\n\t\t\t\t<CommentSite noComments={this.state.commentsExist} comments={comments} noteTitle={this.state.note.title} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Layout from './Layout';\n\nclass App extends Component {\n  render() {\n    return <Layout />   \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst commentZone = document.getElementById('comment-zone');\n// url to get all comments\nexport const noteCommentsApi = commentZone.dataset.commentsUrl;\n// url to search for a user tagged in the comment\nexport const userSearchUrl = commentZone.dataset.searchUserUrl;\n\n// get csrf token\nexport const token = [...document.getElementsByName('csrfmiddlewaretoken')].find(node => node.parentElement.id === 'comments').value;\n\nReactDOM.render(<App />, commentZone);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}